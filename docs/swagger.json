{
  "swagger": "2.0",
  "info": {
    "description": "Server",
    "title": "exchange API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Ivan Anidi",
      "url": "https://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:4000",
  "basePath": "/",
  "paths": {
    "/admin/settings": {
      "get": {
        "description": "SettingsGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Admin", "Settings"],
        "summary": "вернуть настройки системы",
        "operationId": "Admin-Settings-Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/admin.Settings"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/admin.Error"
            }
          }
        }
      }
    },
    "/admin/settings/update": {
      "post": {
        "description": "SettingsUpdate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Admin", "Settings"],
        "summary": "обновить настройки системы",
        "operationId": "Admin-Settings-Update",
        "parameters": [
          {
            "type": "string",
            "description": "Ссылка на услуги",
            "name": "URLServices",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Ссылка на лицензии",
            "name": "URLLicense",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Ссылка на политику конфиденциальности",
            "name": "URLPrivacy",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Ссылка на условия использования",
            "name": "URLTOS",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Ссылка о проекте",
            "name": "URLAbout",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Размер слота бронирования в минутах",
            "name": "SlotDuration",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Максимальное количество слотов на одно бронирование",
            "name": "MaxSlotsPerBooking",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Время на подтверждение переговорной комнаты в минутах",
            "name": "TimeForBookingConfirmation",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "За сколько дней заблаговременно можно забронировать переговорную комнату",
            "name": "BookInAdvanceDaysRestriction",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Логин сервиса отправки SMS",
            "name": "SMSLogin",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "API ключ сервиса отправки SMS",
            "name": "SMSAPIKey",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Текст нового сообщения в чате",
            "name": "PushChatNewMessage",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Текст SMS со ссылкой на пропуск гостя",
            "name": "SMSNewPassIssued",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Email адрес для связи с администрацией",
            "name": "AdminEmail",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Telegram аккаунт для связи с администрацией",
            "name": "AdminTelegram",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "SMTP хост",
            "name": "SMTPHost",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "SMTP имя пользователя",
            "name": "SMTPUsername",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "SMTP пароль",
            "name": "SMTPPassword",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "SMTP порт",
            "name": "SMTPPort",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "SMTP email отправителя",
            "name": "SMTPFromEmail",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "SMTP имя отправителя",
            "name": "SMTPFromName",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "API ключ cometchat",
            "name": "CometchatAPIKey",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "APP ID cometchat",
            "name": "CometchatAppID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/admin.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/admin.Error"
            }
          }
        }
      }
    },
    "/auth/password/reset": {
      "post": {
        "description": "PasswordReset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Auth"],
        "summary": "запрос на сброс пароля с помощью электронной почты/номера телефона",
        "operationId": "Public-Password-Reset",
        "parameters": [
          {
            "type": "string",
            "description": "Способ сброса пароля (email/phone)",
            "name": "Method",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Email адрес пользователя",
            "name": "Email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Телефон пользователя в формате 79999999999",
            "name": "Phone",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/public.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/public.Error"
            }
          }
        }
      }
    },
    "/auth/password/set": {
      "post": {
        "description": "PasswordSet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Auth"],
        "summary": "смена пароля с помощью полученного по email/sms кода подтверждения",
        "operationId": "Public-Password-Set",
        "parameters": [
          {
            "type": "string",
            "description": "Способ сброса пароля (email/phone)",
            "name": "Method",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Email адрес пользователя",
            "name": "Email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Телефон пользователя в формате 79999999999",
            "name": "Phone",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Код подтверждения сброса пароля, полученный по email/sms",
            "name": "Code",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Новый пароль",
            "name": "Password",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/public.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/public.Error"
            }
          }
        }
      }
    },
    "/auth/phone/request": {
      "post": {
        "description": "PhoneRequestCode",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Auth"],
        "summary": "запрос кода для входа по смс",
        "operationId": "Phone-Auth",
        "parameters": [
          {
            "type": "string",
            "description": "Телефон пользователя в формате 79999999999",
            "name": "Phone",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/public.Settings"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/public.Error"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Refresh",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Auth"],
        "summary": "обновить JWT токен. В запросе необходимо послать старый `Authorization: Bearer \u003cTOKEN\u003e` header. В ответ придет обновленный `Authorization: Bearer \u003cTOKEN\u003e` header со значением JWT токена",
        "operationId": "Public-Refresh",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/jwt.SigninRes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/jwt.ErrorRes"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Signin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Auth"],
        "summary": "войти в систему с помощью электронной почты и пароля. В ответ придет `Authorization: Bearer \u003cTOKEN\u003e` header со значением JWT токена",
        "operationId": "Public-Signin",
        "parameters": [
          {
            "type": "string",
            "description": "Email адрес пользователя",
            "name": "Email",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Пароль",
            "name": "Password",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/jwt.SigninRes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/jwt.ErrorRes"
            }
          }
        }
      }
    },
    "/chat/new": {
      "post": {
        "description": "ChatNew",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Chat"],
        "summary": "начать чат с оператором коворкинга",
        "operationId": "Member-Chat-New",
        "parameters": [
          {
            "type": "integer",
            "description": "ID коворкинга, с операторами которого связаться",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.AccessMemberMerged"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/chat/token": {
      "get": {
        "description": "ChatToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Chat"],
        "summary": "получить токен для чата",
        "operationId": "Member-Chat-Token",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.ChatTokenRes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/deactivateAccount": {
      "post": {
        "description": "DeactivateAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Deactivate"],
        "summary": "удалить аккаунт",
        "operationId": "Member-Deactivate-Account",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "description": "FeedGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Feed"],
        "summary": "вернуть feed",
        "operationId": "Member-Feed-Get",
        "parameters": [
          {
            "type": "string",
            "description": "Пол",
            "name": "Gender",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Показывать студентов только из моего университета",
            "name": "RestrictUniversity",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/feed/fave": {
      "post": {
        "description": "FeedFave",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Feed"],
        "summary": "fave feed",
        "operationId": "Member-Feed-Fave",
        "parameters": [
          {
            "type": "integer",
            "description": "FeedID",
            "name": "FeedID",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Лайк = true, убрать лайк = false",
            "name": "Fave",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "description": "InfoGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public", "Settings"],
        "summary": "вернуть настройки системы",
        "operationId": "Public-Info-Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/public.Settings"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/public.Error"
            }
          }
        }
      }
    },
    "/match": {
      "get": {
        "description": "ProfileGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Profile"],
        "summary": "вернуть данные о совпадениях",
        "operationId": "Member-match-Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/operator/pass": {
      "post": {
        "description": "PassGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "вернуть информацию о пропусках",
        "operationId": "Operator-Pass-Get",
        "parameters": [
          {
            "type": "integer",
            "description": "ID коворкиинга, по которому получить записи о пропусках",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Получить записи начиная с n",
            "name": "Offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Ограничить количество записей n",
            "name": "Limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Pass"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/pass/add": {
      "post": {
        "description": "PassAdd",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "добавить новый пропуск",
        "operationId": "Operator-Pass-Add",
        "parameters": [
          {
            "type": "integer",
            "description": "ID пользователя, которому выдается пропуск",
            "name": "MemberID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "ID коворкинга, к которому относится пропуск",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Дата начала действия пропуска в формате YYYY-MM-DD",
            "name": "DateStart",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Дата окончания действия пропуска в формате YYYY-MM-DD",
            "name": "DateEnd",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Состояние (активность)",
            "name": "Active",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/pass/delete": {
      "delete": {
        "description": "PassDeleteByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "удалить пропуск по ID пропуска",
        "operationId": "Operator-Pass-Delete-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID пропуска",
            "name": "PassID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/pass/notify": {
      "post": {
        "description": "PassNotifyByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "отправить данные пропуска на email адрес охраны",
        "operationId": "Operator-Pass-Notify-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID пропуска",
            "name": "PassID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/pass/update": {
      "post": {
        "description": "PassUpdateByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "обновить информацию о пропуске по ID пропуска",
        "operationId": "Operator-Pass-Update-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID пропуска",
            "name": "PassID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Дата начала действия пропуска в формате YYYY-MM-DD",
            "name": "DateStart",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Дата окончания действия пропуска в формате YYYY-MM-DD",
            "name": "DateEnd",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Состояние (активность)",
            "name": "Active",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/pass/{id}": {
      "get": {
        "description": "PassGetByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Pass"],
        "summary": "вернуть информацию о пропуске по ID пропуска",
        "operationId": "Operator-Pass-Get-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID пропуска",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Pass"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/room": {
      "post": {
        "description": "RoomGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Room"],
        "summary": "вернуть информацию о переговорных комнатах",
        "operationId": "Operator-Room-Get",
        "parameters": [
          {
            "type": "integer",
            "description": "ID коворкиинга, по которому получить записи о переговорных комнатах",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Получить записи начиная с n",
            "name": "Offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Ограничить количество записей n",
            "name": "Limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Pass"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/room/add": {
      "post": {
        "description": "RoomAdd",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Room"],
        "summary": "добавить новую переговорную комнату",
        "operationId": "Operator-Room-Add",
        "parameters": [
          {
            "type": "integer",
            "description": "ID коворкинга, к которому относится переговорная комната",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Вмещает в себя n человек",
            "name": "Capacity",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Имя файла загруженного изображения",
            "name": "Image",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Описание переговорной комнаты",
            "name": "Description",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Название переговорной комнаты",
            "name": "Title",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Состояние (активность)",
            "name": "Active",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/room/delete": {
      "delete": {
        "description": "RoomDeleteByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Room"],
        "summary": "удалить комнату по ID комнаты",
        "operationId": "Operator-Room-Delete-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID переговорной комнаты",
            "name": "RoomID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/room/update": {
      "post": {
        "description": "RoomUpdateByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Room"],
        "summary": "обновить информацию о комнате по ID комнаты",
        "operationId": "Operator-Room-Update-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID переговорной комнаты",
            "name": "RoomID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "ID коворкинга, к которому относится переговорная комната",
            "name": "CoworkingID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Вмещает в себя n человек",
            "name": "Capacity",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Имя файла загруженного изображения",
            "name": "Image",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Описание переговорной комнаты",
            "name": "Description",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Название переговорной комнаты",
            "name": "Title",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Состояние (активность)",
            "name": "Active",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/operator/room/{id}": {
      "get": {
        "description": "RoomGetByID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Operator", "Room"],
        "summary": "вернуть информацию о переговорной комнате по ID комнаты",
        "operationId": "Operator-Room-Get-By-ID",
        "parameters": [
          {
            "type": "integer",
            "description": "ID переговорной комнаты",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operator.Room"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/operator.Error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "description": "ProfileGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Profile"],
        "summary": "вернуть данные профиля пользователя",
        "operationId": "Member-Profile-Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/NameGender": {
      "post": {
        "description": "ProfileFaculty",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Profile"],
        "operationId": "Profile-Faculty",
        "parameters": [
          {
            "type": "string",
            "description": "Название факультета",
            "name": "Faculty",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/RoommateSearch": {
      "post": {
        "description": "ProfileRoommateSearch",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Profile"],
        "operationId": "Profile-RoommateSearch",
        "parameters": [
          {
            "type": "string",
            "description": "Значение параметра",
            "name": "RoommateSearch",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/email/update": {
      "post": {
        "description": "EmailUpdate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Email"],
        "summary": "запрос на обновление email пользователя",
        "operationId": "Member-Email-Update",
        "parameters": [
          {
            "type": "string",
            "description": "Новый email адрес",
            "name": "Email",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/email/verify": {
      "post": {
        "description": "EmailVerify",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Email"],
        "summary": "подтверждение обновления email пользователя с помощью кода подтверждения",
        "operationId": "Member-Email-Verify",
        "parameters": [
          {
            "type": "string",
            "description": "Код для подтверждения email",
            "name": "Code",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/interests": {
      "post": {
        "description": "ProfileInterests",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Interests"],
        "summary": "обновить интересы",
        "operationId": "Member-Interests",
        "parameters": [
          {
            "type": "integer",
            "description": "Категория интересов",
            "name": "Category",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Интересы",
            "name": "Interests",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/phone/update": {
      "post": {
        "description": "PhoneUpdate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Phone"],
        "summary": "запрос на обновление номера телефона пользователя",
        "operationId": "Member-Phone-Update",
        "parameters": [
          {
            "type": "string",
            "description": "Новый номер мобильного телефона в формате 79999999999",
            "name": "Phone",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/phone/verify": {
      "post": {
        "description": "PhoneVerify",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Phone"],
        "summary": "подтверждение обновления номера телефона пользователя с помощью кода подтверждения",
        "operationId": "Member-Phone-Verify",
        "parameters": [
          {
            "type": "string",
            "description": "Код для подтверждения номера телефона",
            "name": "Code",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/profile/update": {
      "post": {
        "description": "ProfileUpdate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Profile"],
        "summary": "обновить профиль пользователя",
        "operationId": "Member-Profile-Update",
        "parameters": [
          {
            "type": "string",
            "description": "Имя",
            "name": "Name",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Фамилия",
            "name": "Surname",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Отчество",
            "name": "Lastname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Дата рождения в формате YYYY-MM-DD",
            "name": "Birthday",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/report": {
      "post": {
        "description": "Report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Member", "Report"],
        "summary": "жалоба на контент",
        "operationId": "Member-Report",
        "parameters": [
          {
            "type": "integer",
            "description": "FeedID/DialogID",
            "name": "SubjectID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Код причины жалобы",
            "name": "Reason",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Вид жалобы - feed/chat",
            "name": "Type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member.Success"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "description": "ImageUpload",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "tags": ["Operator"],
        "summary": "загрузить файл изображения и получить в ответе имя загруженного файла",
        "operationId": "Operator-Image-Upload",
        "parameters": [
          {
            "type": "file",
            "description": "Загружаемое изображение",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Название категории загружаемого файла: feed, profile",
            "name": "Category",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "FileName идентификатор загруженного файла",
            "schema": {
              "type": "query"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/member.Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "admin.Error": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "string",
          "example": "ERROR_MESSAGE"
        },
        "Status": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "admin.Settings": {
      "type": "object",
      "properties": {
        "AdminEmail": {
          "description": "Email адрес для связи с администрацией",
          "type": "string"
        },
        "AdminTelegram": {
          "description": "Telegram аккаунт для связи с администрацией",
          "type": "string"
        },
        "BookInAdvanceDaysRestriction": {
          "description": "За сколько дней заблаговременно можно забронировать переговорную комнату",
          "type": "integer"
        },
        "CometchatAPIKey": {
          "description": "API ключ cometchat",
          "type": "string"
        },
        "CometchatAppID": {
          "description": "APP ID cometchat",
          "type": "string"
        },
        "MaxSlotsPerBooking": {
          "description": "Максимальное количество слотов на одно бронирование",
          "type": "integer"
        },
        "PushChatNewMessage": {
          "description": "Текст нового сообщения в чате",
          "type": "string"
        },
        "SMSAPIKey": {
          "description": "API ключ сервиса отправки SMS",
          "type": "string"
        },
        "SMSLogin": {
          "description": "Логин сервиса отправки SMS",
          "type": "string"
        },
        "SMSNewPassIssued": {
          "description": "Текст SMS со ссылкой на пропуск гостя",
          "type": "string"
        },
        "SMTPFromEmail": {
          "description": "SMTP email отправителя",
          "type": "string"
        },
        "SMTPFromName": {
          "description": "SMTP имя отправителя",
          "type": "string"
        },
        "SMTPHost": {
          "description": "SMTP хост",
          "type": "string"
        },
        "SMTPPassword": {
          "description": "SMTP пароль",
          "type": "string"
        },
        "SMTPPort": {
          "description": "SMTP порт",
          "type": "integer"
        },
        "SMTPUsername": {
          "description": "SMTP имя пользователя",
          "type": "string"
        },
        "SettingsID": {
          "type": "integer"
        },
        "SlotDuration": {
          "description": "Размер слота бронирования в минутах",
          "type": "integer"
        },
        "TimeForBookingConfirmation": {
          "description": "Время на подтверждение переговорной комнаты в минутах",
          "type": "integer"
        },
        "URLAbout": {
          "description": "Ссылка о проекте",
          "type": "string"
        },
        "URLLicense": {
          "description": "Ссылка на лицензии",
          "type": "string"
        },
        "URLPrivacy": {
          "description": "Ссылка на политику конфиденциальности",
          "type": "string"
        },
        "URLServices": {
          "description": "Ссылка на услуги",
          "type": "string"
        },
        "URLTOS": {
          "description": "Ссылка на условия использования",
          "type": "string"
        }
      }
    },
    "admin.Success": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "jwt.ErrorRes": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "string",
          "example": "ERROR_MESSAGE"
        },
        "Status": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "jwt.SigninRes": {
      "type": "object",
      "properties": {
        "AuthorizationHeader": {
          "type": "string"
        },
        "BearerTokenValue": {
          "type": "string"
        }
      }
    },
    "member.AccessMemberMerged": {
      "type": "object",
      "properties": {
        "MemberID": {
          "type": "integer"
        }
      }
    },
    "member.ChatTokenRes": {
      "type": "object",
      "properties": {
        "ChatToken": {
          "type": "string"
        }
      }
    },
    "member.Error": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "string",
          "example": "ERROR_MESSAGE"
        },
        "Status": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "member.Member": {
      "type": "object",
      "properties": {
        "AvatarURI": {
          "description": "Фотография пользователя",
          "type": "string"
        },
        "ChatLogin": {
          "description": "Логин xmpp",
          "type": "string"
        },
        "ChatPassword": {
          "description": "Пароль xmpp",
          "type": "string"
        },
        "ChatToken": {
          "description": "Токен cometchat.com",
          "type": "string"
        },
        "Email": {
          "description": "Электронный адрес",
          "type": "string"
        },
        "Faculty": {
          "description": "Факультет",
          "type": "string"
        },
        "Gender": {
          "description": "Пол m/f",
          "type": "string"
        },
        "InterestsComplete": {
          "description": "Интересы заполнены",
          "type": "boolean"
        },
        "Lastname": {
          "type": "string"
        },
        "MemberID": {
          "type": "integer"
        },
        "Name": {
          "description": "Имя",
          "type": "string"
        },
        "PhoneCountryCode": {
          "description": "Мобильный телефон - код страны",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Мобильный телефон - номер телефона",
          "type": "string"
        },
        "RoommateSearch": {
          "description": "Показывать в анкете статус \"ищу соседа\"",
          "type": "boolean"
        },
        "SignupComplete": {
          "description": "Завершена ли регистрация",
          "type": "boolean"
        },
        "Surname": {
          "type": "string"
        },
        "UniversityID": {
          "description": "ID университета, к которому относится пользователь",
          "type": "integer"
        }
      }
    },
    "member.Success": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "operator.Error": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "string",
          "example": "ERROR_MESSAGE"
        },
        "Status": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "operator.Pass": {
      "type": "object",
      "properties": {
        "Active": {
          "description": "Состояние (активность)",
          "type": "boolean"
        },
        "CoworkingID": {
          "description": "ID коворкинга, к которому относится пропуск",
          "type": "integer"
        },
        "DateEnd": {
          "description": "Timestamp окончания действия",
          "type": "string"
        },
        "DateStart": {
          "description": "Timestamp начала действия",
          "type": "string"
        },
        "IssuerID": {
          "description": "ID администратора, который выдал пропуск",
          "type": "integer"
        },
        "MemberID": {
          "description": "ID пользователя, которому выдан пропуск",
          "type": "integer"
        },
        "PassID": {
          "type": "integer"
        },
        "Status": {
          "description": "Состояние (статус пропуска, например, подтвержден)",
          "type": "string"
        }
      }
    },
    "operator.Room": {
      "type": "object",
      "properties": {
        "Active": {
          "description": "Состояние (активность)",
          "type": "boolean"
        },
        "Capacity": {
          "description": "Вмещает в себя n человек",
          "type": "integer"
        },
        "CoworkingID": {
          "description": "ID коворкинга, к которому относится переговорная комната",
          "type": "integer"
        },
        "Description": {
          "description": "Описание комнаты",
          "type": "string"
        },
        "Image": {
          "description": "Фотография комнаты",
          "type": "string"
        },
        "RoomID": {
          "type": "integer"
        },
        "Title": {
          "description": "Название комнаты",
          "type": "string"
        }
      }
    },
    "operator.Success": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "public.Error": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "string",
          "example": "ERROR_MESSAGE"
        },
        "Status": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "public.Settings": {
      "type": "object",
      "properties": {
        "AdminEmail": {
          "description": "Email адрес для связи с администрацией",
          "type": "string"
        },
        "AdminTelegram": {
          "description": "Telegram аккаунт для связи с администрацией",
          "type": "string"
        },
        "BookInAdvanceDaysRestriction": {
          "description": "За сколько дней заблаговременно можно забронировать переговорную комнату",
          "type": "integer"
        },
        "MaxSlotsPerBooking": {
          "description": "Максимальное количество слотов на одно бронирование",
          "type": "integer"
        },
        "PushChatNewMessage": {
          "description": "Текст нового сообщения в чате",
          "type": "string"
        },
        "SlotDuration": {
          "description": "Размер слота бронирования в минутах",
          "type": "integer"
        },
        "TimeForBookingConfirmation": {
          "description": "Время на подтверждение переговорной комнаты в минутах",
          "type": "integer"
        },
        "URLAbout": {
          "description": "Ссылка о проекте",
          "type": "string"
        },
        "URLLicense": {
          "description": "Ссылка на лицензии",
          "type": "string"
        },
        "URLPrivacy": {
          "description": "Ссылка на политику конфиденциальности",
          "type": "string"
        },
        "URLServices": {
          "description": "Ссылка на услуги",
          "type": "string"
        },
        "URLTOS": {
          "description": "Ссылка на условия использования",
          "type": "string"
        }
      }
    },
    "public.Success": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "boolean",
          "example": true
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
